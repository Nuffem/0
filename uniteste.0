lista # lista.0

lista_reduzir = args =>
  args[0][.] == 1 ?
    args[0][0] :
  args[0][.] == 2 ?
    args[1]([args[0][0], args[0][1]]) :
  lista_reduzir([
    [args[1]([args[0][0], args[0][1]])
    ...args[0][2:]]
    args[1]
  ])

lista_planificar = lista_original =>
  lista_original[.] == 0 ?
    [] :
  [...lista_original[0] ...lista_planificar(lista_original[1:])]

compara_listas = args =>
  args[0][.] != args[1][.] ? 0 :
  args[0][.] == 0 ? 1 :
  args[0][0] != args[1][0] ? 0 :
  compara_listas([args[0][1:], args[1][1:]])

compara_objetos = args =>
  args[0][*][.] != args[1][*][.] ? 0 :
  args[0][*][.] == 0 ? 1 :
  lista_reduzir([
    lista.mapear([args[0][*], chave => args[0][chave] == args[1][chave] ? 1 : 0])
    args => args[0] & args[1]
  ])

uniteste = {
  descrever: args => () =>
    (
      mensagens = lista.mapear([
        lista_planificar(
          lista.mapear([
            args[1],
            teste => (
              resultado = teste()
              resultado[0:resultado[.] - 2]
            )
          ])
        ),
        mensagem => [4 `${args[0]} | ${mensagem[1]}`]
      ])
      passaram = lista_reduzir([
        lista.mapear([args[1], teste => (
          resultado = teste()
          resultado[resultado[.] - 1][2]
        )]),
        pair => pair[0] + pair[1]
      ])
      [
        ...mensagens
        [4 `${"" + passaram}/${"" + mensagens[.]} testes passaram.`]
        [
          3
          passaram == mensagens[.] ? 0 : 1
          passaram
        ]
      ]
    )
  iguais: args => () =>
    args[0] == args[1] ?
      [
        [4 "ok"]
        [4 "1/1 testes passaram."]
        [3 0 1]
      ] :
      [
        [4 `Esperava que ${"" + args[0]} fosse igual a ${"" + args[1]}.`]
        [4 "0/1 testes passaram."]
        [3 1 0]
      ],
  listas_iguais: args => () =>
    compara_listas([args[0], args[1]]) ?
      [
        [4 "ok"],
        [4 "1/1 testes passaram."],
        [3 0 1]
      ] :
      [
        [4 `Esperava que [${lista.juntar([args[0], ", "])}] fosse igual a [${lista.juntar([args[1], ", "])}].`],
        [4 "0/1 testes passaram."],
        [3 1 0]
      ],
  objetos_iguais: args => () =>
    compara_objetos([args[0], args[1]]) ?
      [
        [4 "ok"],
        [4 "1/1 testes passaram."],
        [3 0 1]
      ] :
      [
        [4 `Esperava que os objetos fossem iguais.`],
        [4 "0/1 testes passaram."],
        [3 1 0]
      ]
}

uniteste