uniteste # ../uniteste.0

uniteste.descrever({"Operador de espalhamento" {
  uniteste.descrever({"Com itens sem chaves (arrays simples)" {
    uniteste.listas_iguais({
      {...{"a" "b"} "c"}
      {"a" "b" "c"}
    })
    
    uniteste.listas_iguais({
      {
        lista1: {"Star Wars" "Matrix"}
        lista2: {"Jurassic Park" "Avatar"}
        {...lista1 ...lista2}
      }[0]
      {"Star Wars" "Matrix" "Jurassic Park" "Avatar"}
    })
    
    uniteste.listas_iguais({
      {
        números: {1 2 3}
        {"inicio" ...números "fim"}
      }[0]
      {"inicio" 1 2 3 "fim"}
    })
    
    uniteste.listas_iguais({
      {
        filmes: {"Star Wars" "O Senhor dos Anéis" "Matrix"}
        {...filmes[0:2] "Jurassic Park"}
      }[0]
      {"Star Wars" "O Senhor dos Anéis" "Jurassic Park"}
    })
  }})
  
  uniteste.descrever({"Com itens com chaves" {
    // Teste: lista com chaves pode ser acessada normalmente
    uniteste.iguais({
      {
        dados: {nome: "João" idade: 30}
        dados["nome"]
      }[0]
      "João"
    })
    
    // Teste: espalhar lista simples em contexto que aceita chaves
    uniteste.iguais({
      {
        lista_simples: {"valor1" "valor2"}
        dados_com_chaves: {nome: "João" ...lista_simples idade: 30}
        dados_com_chaves[0]
      }[0]
      "valor1"
    })
    
    // Teste: espalhar lista com chaves
    uniteste.iguais({
      {
        dados1: {nome: "João" cidade: "São Paulo"}
        dados2: {idade: 30 profissao: "Desenvolvedor"}
        resultado: {...dados1 ...dados2}
        resultado["nome"]
      }[0]
      "João"
    })
    
    // Teste: espalhar lista com chaves (propriedade do segundo objeto)
    uniteste.iguais({
      {
        dados1: {nome: "João" cidade: "São Paulo"}
        dados2: {idade: 30 profissao: "Desenvolvedor"}
        resultado: {...dados1 ...dados2}
        resultado["profissao"]
      }[0]
      "Desenvolvedor"
    })
    
    // Teste: misturar espalhamento com novos valores
    uniteste.iguais({
      {
        base: {nome: "João"}
        resultado: {...base idade: 30 cidade: "São Paulo"}
        resultado["cidade"]
      }[0]
      "São Paulo"
    })
  }})
  
  uniteste.descrever({"Comportamento misto" {
    // Misturar itens simples e com chaves
    uniteste.listas_iguais({
      {
        lista_simples: {"item1" "item2"}
        lista_resultado: {nome: "João" ...lista_simples cidade: "São Paulo"}
        {lista_resultado[0] lista_resultado[1]}
      }[0]
      {"item1" "item2"}
    })
    
    // Acessar propriedade nomeada após espalhamento
    uniteste.iguais({
      {
        lista_simples: {"item1" "item2"}
        lista_resultado: {nome: "João" ...lista_simples cidade: "São Paulo"}
        lista_resultado["nome"]
      }[0]
      "João"
    })
    
    // Acessar propriedade nomeada adicionada após espalhamento
    uniteste.iguais({
      {
        lista_simples: {"item1" "item2"}
        lista_resultado: {nome: "João" ...lista_simples cidade: "São Paulo"}
        lista_resultado["cidade"]
      }[0]
      "São Paulo"
    })
    
    // Verificar tamanho da lista resultante
    uniteste.iguais({
      {
        lista_simples: {"item1" "item2"}
        lista_resultado: {nome: "João" ...lista_simples cidade: "São Paulo"}
        lista_resultado[.]
      }[0]
      2
    })
    
    // Verificar chaves da lista resultante
    uniteste.listas_iguais({
      {
        lista_simples: {"item1" "item2"}
        lista_resultado: {nome: "João" ...lista_simples cidade: "São Paulo"}
        lista_resultado[*]
      }[0]
      {"nome" "cidade"}
    })
  }})
}})